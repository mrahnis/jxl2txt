on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
    - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

name: Release tagged asset

jobs:
  build:
    name: Release tagged asset
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: [3.8]

    steps:
    - uses: actions/checkout@v2.3.3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2.1.1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip 
        pip install setuptools wheel twine
        pip install numpy cython
        pip install -r requirements.txt
    - name: Lint with flake8
      run: |
        pip install flake8
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Install package
      run: |
        pip install .
    - name: Test with pytest
      run: |
        pip install pytest
        pytest
    - name: Package release artifact
      run: |
        python setup.py sdist bdist_wheel
        WHEEL_PATH=$(find dist/*.whl)
        WHEEL_NAME=$(basename $WHEEL_PATH)
        echo ::set-env name=WHEEL_PATH::$WHEEL_PATH
        echo ::set-env name=WHEEL_NAME::$WHEEL_NAME
    - name: Create release
      id: create_release
      uses: actions/create-release@v1.1.2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false
    - name: Upload release asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: ${{ env.WHEEL_PATH }}
        asset_name: ${{ env.WHEEL_NAME }}
        asset_content_type: application/x-wheel+zip